############################################################
#   Update the cache on the main branch on push event
#   Support also manual execution
############################################################
name: update-cache

on:
  workflow_dispatch:
    inputs:
        chosen-os:
          description: 'Environment to run tests against'
          required: true
          type: choice
          options:
          - Ubuntu-20.04
          - Ubuntu-24.04
          - Windows-2022
          - Windows-2025
          - macOS-13
          - macOS-14
          - macOS-15

  push:
    branches:
      - "main"

jobs:
  build-cache:
    name: Build Cache
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-20.04, ubuntu-24.04, windows-2022, windows-2025, macos-13, macos-14, macos-15]
            buildConfig: [Debug, Release]
        # if one job in the matrix fail, don't cancel other jobs inthe matrix
        fail-fast: false
    steps:
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        name: Install libltdl-dev
        # required for SDL2 dependency
        # Fix configure.ac:60: error: possibly undefined macro: LT_SYS_SYMBOL_USCORE
        run: sudo apt-get install libltdl-dev

      - if: ${{ startsWith(matrix.os, 'macos') }}
        # Osx does not have Ninja installed.
        # CMake should used make but vcpkg fail to build on macos-14 and macos-15
        # beacause cmake can√®t find Ninja....
        name: Installing ninja
        run: |
            brew install ninja
            ninja --version
        #uses: seanmiddleditch/gha-setup-ninja@master
        #with:
        #    version: 1.11.1


      # Clone the repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            submodules: true
            fetch-depth: 0

      # Setup vcpkg: ensures vcpkg is downloaded and built.
      # This will also run vcpkg
      - name: Setup a new (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        env:
          VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed
        with:
          runVcpkgInstall: true

      - name: Prints output of run-vcpkg's action.
        run: |
            echo root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}'
            echo triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}'
